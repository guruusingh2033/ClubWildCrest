@model IEnumerable<WildCrest.Models.WildCrestModels.Inventory>

<style>
    .borderClass{
  border-color: #f70404;
  border-width:1px;
  border-style: solid;
  
}
    .modal-body1 {
        margin-left: 25px;
    }
     .modal-body2 {
        margin-left: 25px;
    }

    .fa-plus-square {
        font-size: 19px;
        color: #272c33;
    }
  .fa-edit:before{
    
    font-size: 19px;
    color: #272c33;
}
    /*.modal-body {
        overflow-y: scroll;
        height: 400px;
    }*/
    .loader_gif {
position: fixed;
left: 0px;
top: 0px;
width: 100%;
height: 100%;
z-index: 9999;
background: url('/bxSlider/images/bx_loader.gif') 50% 50% no-repeat rgb(249,249,249,0.44);
opacity: .8;
}
</style>
<div class="loader_gif" style="display:none;"></div>
<div class="card">
    <div class="card-block">
        <div class="row">
            @Html.ActionLink("Add New Item", "AddNewItem", "Inventory", new { @class = "btn btn-primary btn-margin" })
            @Html.ActionLink("Add Inventory Used", "InventoryUsage", "Inventory", new { @class = "btn btn-primary btn-margin" })
            @Html.ActionLink("Inventory Used", "InventoryUsedRecord", "Inventory", new { @class = "btn btn-primary btn-margin" })
        </div>
        <div class="table-responsive m-t-40">
            <table id="inventoryList" class="display table table-hover table-striped table-bordered" cellspacing="0" width="100%">
                <thead>
                    <tr>

                        <th>Actions</th>
                        <th>Item Name</th>
                        <th>Type</th>
                        <th>Quantity</th>
                        <th>In Stock</th>
                        <th>Price</th>
                        <th>Vendor Name</th>
                        <th>Added Date</th>
                        <th>Other Info</th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var i in Model)
                    {
                        var stylecolor = (i.InStock <0)? "background-color:#ff3333;color:white" : "background-color:#ffffff;color:black";

                        <tr style="@stylecolor">

                            <td>
                                <a title="Detail" href="@Url.Action("InventoryDetailsByID", "Inventory", new { id = i.ID }, null)">
                                    <i class="fa fa-info-circle" aria-hidden="true"></i>
                                </a>
                                <a title="Edit" href="@Url.Action("AdminDetailsByID", "Admin", new { id = i.ID, editDetail = "Edit" }, null)">
            <i class="fa fa-pencil-square-o" aria-hidden="true"></i>
        </a>

                                <a href="#" title="Delete" onclick="DeleteInventoryById(@i.ID);">
                                    <i class="fa fa-trash" aria-hidden="true"></i>
                                </a>
                                @*<a class="plusItem" title="Add More Quantity" href="/Inventory/AddNewItem"><i class="fa fa-plus-square" aria-hidden="true"></i></a>*@
                                <button type="button" title="Add More Quantity" class="btn btn-link" style="box-shadow:none;" data-ItemName="@i.Item_Name" data-InventoryID="@i.ID" data-VendorID="@i.VendorID" data-Price="@i.Price" data-toggle="modal" data-target="#qtyModal"><i class="fa fa-plus-square" aria-hidden="true"></i></button>
                                @if (Request.Cookies["UserType"].Value == "1")
                                {
                                    <button type="button" title="Edit Quantity" class="btn btn-link" style="box-shadow:none;" data-ItemName="@i.Item_Name" data-InventoryID="@i.ID" data-VendorID="@i.VendorID" data-Qty="@(String.Format("{0:0.##}", i.Quantity))" data-InStock="@i.InStock" data-toggle="modal" data-target="#qtyupdateModal"><i class="fa fa-edit"></i></button>
                                }
                            </td>
                            <td>@i.Item_Name</td>
                            <td>@i.Type</td>
                            <td>@(String.Format("{0:0.##}", i.Quantity))</td>
                            <td>@(String.Format("{0:0.##}", i.InStock)) (@i.Measurement)</td>
                            <td>₹ @i.Price</td>
                            <td>@i.VendorName</td>
                            <td>@i.Added_Date
                            </td>
                            <td>
                                <input type="button" class="btn-link" onclick="stockInfo(@i.ID,'@i.Item_Name');" value="Stock Info" style="cursor:pointer;outline:none;" /></td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<input type="hidden" id="Inventory_ID" value="" />

<script>
    var itemprice = '';
    $(document).ready(function () {
        $("#inventoryList").dataTable({ 'aoColumnDefs': [{
            'bSortable': false,
            'aTargets': [7,8] /* 1st one, start by the right */
        }] });

        $("#price").on("keypress keyup blur", function (event) {
            $(this).val($(this).val().replace(/[^\d].+/, ""));
            if ((event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }
        });
        $("#qty,#instock").on("keypress keyup blur",function (event) {
            $(this).val($(this).val().replace(/[^0-9\.]/g,''));
            if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }
        });
    });

    function DeleteInventoryById(id) {
        bootbox.confirm("Are you sure to delete this Item from Inventory?", function (result) {
            if (result) {
                $.ajax({
                    type: "post",
                    contentType: "application/json; charset=utf-8",
                    url: "/Inventory/DeleteInventoryById",
                    data: JSON.stringify({ id: id }),
                    dataType: "json",
                    success: function (response) {
                        bootbox.confirm("Item Deleted.", function (result) {
                            window.location.href = "/Inventory/Index";
                        });
                        $(".modal-dialog .modal-content .modal-footer .btn-default").hide();

                    }
                });
            }
            else {
                bootbox.alert({
                    message: "Not Deleted.",
                    size: "small"
                });
            }
        });
    }
    $.date = function(dateObject) {
       
        var d = new Date(dateObject);
        var day = d.getDate();
        var month = d.getMonth() + 1;
        var year = d.getFullYear();
        if (day < 10) {
            day = "0" + day;
        }
        if (month < 10) {
            month = "0" + month;
        }
        var date = day + "/" + month + "/" + year;

        return date;
    };
    function stockInfo(inventoryID,itemName) {



        $(".modal-body").empty();
        $(".loader_gif").css("display", "block");
        $.ajax({
            type: "post",
            contentType: "application/json; charset=utf-8",
            url: "/Inventory/stockInfo",
            data: JSON.stringify({ inventoryID: inventoryID }),
            dataType: "json",
            success: function (response) {
            
                var list = response.Records;
                if (list.length > 0) {

                    $('#stcktitle').html('Stock Info '+'('+itemName+')');
                    var tbl = '';
                    var totalQuantity = 0;
                    var used = 0;
                    var left = 0;
                    tbl += "<table id='dt_tbl' class='display table table-hover table-striped table-bordered'> <thead><tr><th>Used Quantity</th><th>Description</th><th>Used_Date</th></tr></thead>";
                    tbl += "<tbody>";
                    for (var i = 0; i < list.length; i++) {
                        var stylecolor = (list[i].Used_Qty==0)?"background-color:#fdd2d2;":"";
                        tbl += "<tr style='" + stylecolor + "'><td>" + list[i].Used_Qty + "</td>";
                        if (list[i].GST_NonGST_Bill != "" && list[i].GST_NonGST_Bill != null)
                        {
                            if (list[i].GST_NonGST_Bill=="NonGST"){
                                tbl += "<td><a target='_blank' href='/Billing/NonGstBillDetailsByBillNo/" + list[i].BillNo + "'>" + list[i].Description + "</a></td>";
                            }
                            else if (list[i].GST_NonGST_Bill=="GST"){
                                if (list[i].IsBuffetFood==true){
                                    tbl += "<td><a target='_blank' href='/BuffetMenu/BillDetailsByBillNo/" + list[i].BillNo + "'>" + list[i].Description + "</a></td>";
                                }else{
                                    tbl += "<td><a target='_blank' href='/Billing/BillDetailsByBillNo/" + list[i].BillNo + "'>" + list[i].Description + "</a></td>";
                                }
                         }
                        }
                        else{
                            tbl += "<td>" + list[i].Description + "</td>";
                        }

                        tbl += "<td>" + $.date(list[i].Used_Date) + "</td></tr>";
                        totalQuantity = list[i].TotalQuantity;
                       // used = used + response[i].Used_Qty;
                    }
                    used = response.TotalUsedQuantity;
                    var qtyTemp=used.toFixed(3);
                    left = (totalQuantity - qtyTemp);
                    left=Number.isInteger(left)?left:left.toFixed(2);
                    used=Number.isInteger(used)?used:qtyTemp;
                    tbl+="</tbody>";
                    tbl += "</table>";
                    var totalQty = "<br><b>Total Quantity = " + totalQuantity.toFixed(2) + "</b>" +
                        "<br><b>Used Quantity = " + used + "</b>" +
                        "<br><b>Left Quantity = " + left + "</b>";

                    totalQty +=  tbl;
                    $(".modal-body").append(totalQty);
                    var table = $('.modal-body table').DataTable({
                        "paging":   false,
                        "ordering": false,
                        "info":     false,
                        "bFilter": false,
                        "drawCallback": function ( settings ) {

                            var api = this.api();
                            var rows = api.rows( {page:'current'} ).nodes();
                            var last='';
                            var last_sub='';
                            var group_sub='';
                            var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
                            api.column(2, {page:'current'} ).data().each( function ( group, i ) {
                              
                                last_sub=last;
                                group_sub=group;

                                
                                if (last_sub.substring(3, 5) !== group_sub.substring(3, 5)) {

                                    $(rows).eq( i ).before(
                                        '<tr class="group"><td colspan="3" style="background-color:#001f3f;color:white;margin-top:5px;">'+months[parseInt(group_sub.substring(3, 5)) - 1]+'-'+group_sub.substring(6, 10)+'</td></tr>'
                                    );

                                    last = group;
                                }
                            } );
                        }
                    });


                }
                else {
                    //$(".modal-body").empty();
                    $(".modal-body").append("Stock not used yet.");
                }
                $('#myModal').modal('show');
               
                $('#myModal .modal-body').css({'overflow-y':'initial !important','height': '400px','overflow-y':'auto'});
                $(".loader_gif").css("display", "none");
            },
            error: function () {
                //alert('error');
                $(".loader_gif").css("display", "none");
            }
        });
    }

    $(document).on('show.bs.modal','#qtyModal', function (e) {
        var InventoryID = $(e.relatedTarget).data('inventoryid');
        var Item_Name = $(e.relatedTarget).data('itemname');
        var price = $(e.relatedTarget).data('price');
      
        var vendorID = $(e.relatedTarget).data('vendorid');
        $("#Inventory_ID").val(InventoryID);
        $("#Item_Name").html(Item_Name);
        $("#price").val(price);
        itemprice = $("#price").val();
        $("#vendorID").val(vendorID);
    });
    function closeModal() {
        $("#Inventory_ID").val("");
        $("#Item_Name").empty();
        $("#qty").val("");
        $("#price").val("");
        $("#vendorID").val(0);
        $("#errorMsg").empty();

        $("#qtyModal").modal('hide');


    }
    $(document).on('show.bs.modal', '#qtyupdateModal', function (e) {
        var InventoryID = $(e.relatedTarget).data('inventoryid');
        var Item_Name = $(e.relatedTarget).data('itemname');
        var Qty = $(e.relatedTarget).data('qty');
        var InStock = $(e.relatedTarget).data('instock');
        var vendorID = $(e.relatedTarget).data('vendorid');
        $("#Inventory_ID").val(InventoryID);
        $("#ItemName").html(Item_Name);
        $("#qtyupdate").val(Qty);
        $("#instock").val(InStock);
       
    });
    function closeupdateModal() {
        $("#Inventory_ID").val("");
        $("#ItemName").empty();
        $("#qtyupdate").val("");
        $("#instock").val("");
        $("#instockcurrent").val("");
        $("#errorupdateMsg").empty();
        $("#qtyupdateModal").modal('hide');
    }
   

    function addQuantity() {

        var invID=$("#Inventory_ID").val();
        var qty=$("#qty").val();
        var price=$("#price").val();
        var vendorID=$("#vendorID").val();
        if(invID!="" && qty!="" && price!="" && vendorID!=0)
        {
            var newItem = {
                ID: invID,
                Price: price,
                Quantity: qty,
                VendorID: vendorID,
            };
           
            if (itemprice != price) {
                bootbox.confirm("do you want to update price of related menuitem.", function (result) {
                    if (result) {

                        $.ajax({
                            type: "POST",
                            contentType: "application/json; charset=utf-8",
                            url: "/Inventory/addQuantity",
                            data: JSON.stringify({ newItem }),
                            dataType: "Json",
                            success: function (data) {
                              
                                if (data.length > 0) {
                                    var id = [];
                                    for (var i = 0; i < data.length; i++) {
                                        id.push(data[i].ID);
                                    }
                                    $.ajax({
                                        type: "POST",
                                        contentType: "application/json; charset=utf-8",
                                        url: "/MenuItems/getMenuItems",
                                        data: JSON.stringify({ menuitemID: id }),
                                        dataType: "Json",
                                        success: function (data) {
                                            var tbl = '';
                                            tbl += "<table id='tbl_Menus' class='display table table-hover table-striped table-bordered'> <thead><tr><th>Item Name</th><th>Old Price</th><th>New Price</th><th>Action</th></tr></thead>";
                                            tbl += "<tbody>";
                                            for (let j = 0; j < data.length; j++) {
                                                tbl += "<tr id='" + data[j].ID + "' ><td>" + data[j].Food_Item_Name + "</td>";
                                                tbl += "<td>" + data[j].Price + "</td>";
                                                tbl += "<td><input type='number' class='form-control' required/></td>";
                                                tbl += "<td><input type='button' value='Update' class='btn btn-primary' onclick='updatePrice(" + data[j].ID + ")'/></td></tr>";
                                                
                                                
                                            }

                                            tbl += "</tbody>";
                                            tbl += "</table>";
                                           
                                            bootbox.alert(tbl);
                                            $('.bootbox .modal-dialog .modal-content').css({'overflow-y':'initial !important','height': '400px','overflow-y':'auto','width': 640});
                                        },
                                        error: function (err) {
                                            bootbox.alert(err.statusText);
                                        }
                                    });
                                }
                                else{
                                    bootbox.alert("no menuitem used yet for this inventory.");
                                    location.reload();
                                }
                            },
                            error: function (err) {
                                bootbox.alert(err.statusText);
                            }
                        });
                       

                    } else {
                        $.ajax({
                            type: "POST",
                            contentType: "application/json; charset=utf-8",
                            url: "/Inventory/addQuantity",
                            data: JSON.stringify({ newItem }),
                            dataType: "Json",
                            success: function (data) {
                                //closeModal();
                                location.reload();
                            },
                            error: function (err) {
                                bootbox.alert(err.statusText);
                            }
                        });
                    }
                });
            }
            else {
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "/Inventory/addQuantity",
                    data: JSON.stringify({ newItem }),
                    dataType: "Json",
                    success: function (data) {
                        //closeModal();
                        location.reload();
                    },
                    error: function (err) {
                        bootbox.alert(err.statusText);
                    }
                });
            }
        }
        else{
            $("#errorMsg").empty();
            if(qty=="")
                $("#errorMsg").append("Quantity Field is empty!");
            else if(price=="")
                $("#errorMsg").append("Price Field is empty!");
            else if(vendorID==0)
                $("#errorMsg").append("Please select Vendor.");
            else if(invID=="")
                $("#errorMsg").append("Couldn't found Inventory.");
        }
    }
    function updatePrice(menuId) {
        
        var newPrice = jQuery('#' + menuId).find("td:eq(2) input").val();
        if (newPrice == undefined || newPrice == '') {
            jQuery('#' + menuId).find("td:eq(2) input").addClass('borderClass');
        } else {
            jQuery('#' + menuId).find("td:eq(2) input").removeClass('borderClass');
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: "/MenuItems/UpdateMenuPriceByID",
                data: JSON.stringify({ id: menuId, price: newPrice }),
                dataType: "Json",
                success: function (data) {
                    bootbox.alert("Updated");
                    jQuery('#' + menuId).find("td:eq(1)").text(newPrice);
                    jQuery('#' + menuId).find("td:eq(2) input").val('');

                },
                error: function (err) {
                    bootbox.alert(err.statusText);
                }
            });
        }
    }

    function updateQuantity() {
        if ($("#instock").val() == '') {
            $("#errorupdateMsg").html("InStock is required.");
            return;
        }
       
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "/Inventory/UpdateQuantity",
            data: JSON.stringify({ InventoryID: $("#Inventory_ID").val(), Instock: $("#instock").val() }),
            dataType: "Json",
            success: function (data) {
                if (data == "updated") {
                    closeupdateModal();
                    location.reload();
                } if (data == "both equal") {
                    closeupdateModal();
                } else {
                    $("#errorupdateMsg").html("");
                    $("#errorupdateMsg").html("something went wrong.");
                }
               
            },
            error: function (err) {
                bootbox.alert(err.statusText);
            }
        });

        
}
</script>

<div id="myModal" class="modal fade stock_info_modal_popup" role="dialog" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content" style="width:130%;">
            <div class="modal-header">

                <h4 class="modal-title" id="stcktitle">Stock Info</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<div id="qtyModal" class="modal fade stock_info_modal_popup" role="dialog" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">

                <h4 class="modal-title">Add Quantity for <span id="Item_Name"></span></h4>
                <button type="button" class="close" onclick="closeModal();">&times;</button>
            </div>
            <div class="modal-body1">
                <table cellpadding="10">
                    <tbody>
                        <tr>
                            <td>Quantity</td>
                            <td>
                                <input type="text" id="qty" class="form-control" /></td>
                        </tr>
                        <tr>
                            <td>Price</td>
                            <td>
                                <input type="text" id="price" class="form-control" /></td>
                        </tr>
                        <tr>
                            <td>Vendor</td>
                            <td>
                                <select id="vendorID" class="form-control">
                                    <option value="0">Select</option>
                                    @if (ViewBag.VendorsList != null && ViewBag.VendorsList.Count != 0)
                                    {
                                        foreach (var vn in ViewBag.VendorsList)
                                        {
                                        <option value="@vn.ID">@vn.Vendor_First_Name @vn.Vendor_Last_Name</option>
                                        }
                                    }
                                </select></td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <i>
                <div id="errorMsg" style="margin-left: 25px; color: red; font-size: 13px; font-weight: 400;"></div>
            </i>
            <div class="modal-footer">
                <input type="button" value="Add" onclick="addQuantity();" class="btn btn-primary" />

                <button type="button" class="btn btn-default" onclick="closeModal();">Close</button>
            </div>
        </div>

    </div>
</div>


<div id="qtyupdateModal" class="modal fade stock_info_modal_popup" role="dialog" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">

                <h4 class="modal-title">Edit Quantity for <span id="ItemName"></span></h4>
                <button type="button" class="close" onclick="closeupdateModal();">&times;</button>
            </div>
            <div class="modal-body2">
                <table cellpadding="10">
                    <tbody>
                        <tr hidden="hidden">
                            <td>Quantity</td>
                            <td>
                                <input type="text" id="qtyupdate" class="form-control" readonly/>
                            </td>
                        </tr>
                        <tr>
                            <td>InStock</td>
                            <td>
                                <input type="text" id="instock" class="form-control"/>
                            </td>
                        </tr>
                        <tr  hidden="hidden">
                            <td>Update Quantity</td>
                            <td>
                                <input type="text" id="instockcurrent" class="form-control" />
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <i>
                <div id="errorupdateMsg" style="margin-left: 25px; color: red; font-size: 13px; font-weight: 400;"></div>
            </i>
            <div class="modal-footer">
                <input type="button" value="Update" onclick="updateQuantity();" class="btn btn-primary" />

                <button type="button" class="btn btn-default" onclick="closeupdateModal();">Close</button>
            </div>
        </div>

    </div>
</div>